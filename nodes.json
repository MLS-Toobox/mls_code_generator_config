{
    "nodes" :
    [
        {   "node" : "Input",
            "info" : {
                "title" : "Loads data from previous step"
            },
            "category" : "Step Managment",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "key", "param_type" : "string", "show" : true},
                {"param_label" : "Socket type", "param_type" : "option", "optionId": "socket_type", "show" : false}
            ],
            "inputs" : [],
            "outputs" : [
                {
                    "port_label" : "key",
                    "port_type" : "Any"

                }
            ],
            "dependencies" : {
                "orchestration": {
					"origin": "custom",
					"value": "In"
				}
            },
			"origin" : {
				"custom" : "In"
			}
        },
        {   "node" : "Output",
            "info" : {
                "title" : "Saves data to be used in next steps"
            }, 
            "category" : "Step Managment",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "key", "param_type" : "string", "show" : true},
                {"param_label" : "Socket type", "param_type" : "option", "optionId": "socket_type", "show" : false}
            ],
            "inputs" : [
                {
                    "port_label" : "key",
                    "port_type" : "Any"
                }
            ],
            "outputs" : [],
            "dependencies" : {
                "orchestration": {
                    "origin" : "custom",
                    "value" : "Out"
                }
            },
            "origin" : {
                "custom" : "Out"
            }
        },
        {   "node" : "Parameter",
            "info" : {
                "title" : "Loads parameter from current step"      
            },
            "category" : "Step Managment",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "type", "param_type" : "option", "optionId": "parameter_type", "show" : true}
            ],
            "inputs" : [],
            "outputs" : [],
            "dependencies" : {
				"orchestration": {
					"origin": "custom",
					"value": "StepManager"
				}
            },
			"origin" : {
				"custom" : "StepManager"
			}
        },
        {   "node" : "Select Columns",
            "info" : {
                "title" : "Selects given Columns"
            },
            "category" : "Feature Engineering",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                {"port_label" : "origin_table", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                {"port_label" : "resulting_table", "port_type" : "DataFrame" }
            ],
            "dependencies" : {
				"data_transformation" : {
					"origin": "custom",
					"value": "SelectColumns"
				}
			},
			"origin" : {
				"custom" : "SelectColumns"
			}
        },
        {   "node" : "Split train test",
            "info" : {
                "title" : "Splits data into train and test"
            },
            "category" : "Model Training",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "train_percentage", "param_type" : "number", "show" : true}
            ],
            "inputs" : [
                {"port_label" : "features", "port_type" : "DataFrame" },
                {"port_label" : "truth", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                {"port_label" : "features_train", "port_type" : "DataFrame" },
                {"port_label" : "features_test", "port_type" : "DataFrame" },
                {"port_label" : "truth_train", "port_type" : "DataFrame" },
                {"port_label" : "truth_test", "port_type" : "DataFrame" }
            ],
            "dependencies" : {
                "data_transformation": {
					"origin": "custom",
					"value": "SplitTrainTest"
				}
            },
			"origin" : {
				"custom" : "SplitTrainTest"
			}
        },
        {   "node" : "Join",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Joins two tables"  
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "type", "param_type" : "option", "optionId" : "join_type", "show" : true},
                {"param_label" : "index", "param_type" : "string", "show" : false},
                {"param_label" : "dataset_tag", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                {"port_label" : "left", "port_type" : "DataFrame" },
                {"port_label" : "right", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                {
                "port_label" : "out",
                "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
				"data_transformation": {
					"origin": "custom",
					"value": "Join"
				}
			},
			"origin" : {
				"custom" : "Join"
			}
        },
        {   "node" : "Drop Columns",
            "info" : {
                "title" : "Drops given columns"
            },
            "category" : "Feature Engineering",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : true}
            ],
            "inputs" : [
                {"port_label" : "origin_table", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                {"port_label" : "resulting_table", "port_type" : "DataFrame" }
            ],
            "dependencies" : {
				"data_transformation": {
					"origin": "custom",
					"value": "DropColumns"
				}
			},
			"origin" : {
				"custom" : "DropColumns"
			}
        },
        {   "node" : "CSVLoader",
            "category" : "Data Collection",
            "info" : {
                "title" : "Loads CSV file from disk"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "path", "param_type" : "string", "show" : true}
            ],
            "inputs" : [],
            "outputs" : [
                {
                "port_label" : "out",
                "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
                "data_collection" : {
                    "origin": "custom",
                    "value": "CSVLoader"
                }
            },
            "external_dependencies" : [
                "./data/<param:path>"
            ],
            "origin" : {
                "custom" : "CSVLoader"
            }
        },
        {   "node" : "JSONLoader",
            "category" : "Data Collection",
            "info" : {
                "title" : "Loads JSON file from disk"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "path", "param_type" : "string", "show" : true}
            ],
            "inputs" : [],
            "outputs" : [
                {
                "port_label" : "out",
                "port_type" : "DataFrame"
                }
            ],
            "dependencies" : {
                "data_collection" : {
                    "origin": "custom",
                    "value": "JSONLoader"
                }
            },
            "external_dependencies" : [
                "./data/<param:path>"
            ],
            "origin" : {
                "custom" : "JSONLoader"
            }
        },
        {   "node" : "Replace NaNs",
            "category": "Data Cleaning",
            "info": {
                "title": "Replace NaN values"
            },
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "value", "param_type": "string", "show": true}
            ],
            "inputs": [
                { 	"port_label": "in", "port_type": "DataFrame" }
            ],
            "outputs": [
                {	"port_label": "out", "port_type": "DataFrame" }
            ],
            "dependencies": {
                "data_cleaning" : {
                    "origin": "custom",
                    "value": "ReplaceNaN"
                }
            },
            "origin": {
                "custom": "ReplaceNaN"
            }
        },
        {   "node" : "Replace Value",
            "category": "Data Cleaning",
            "info": {
                "title": "Replace one value with another"
            },
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "old_value", "param_type": "string", "show": true},
                {"param_label": "new_value", "param_type": "string", "show": true}
            ],
            "inputs": [
                { 	"port_label": "in", "port_type": "DataFrame" }
            ],
            "outputs": [
                {	"port_label": "out", "port_type": "DataFrame" }
            ],
            "dependencies": {
                "data_cleaning" : {
                    "origin": "custom",
                    "value": "ReplaceValue"
                }
            },
            "origin": {
                "custom": "ReplaceValue"
            }
        },
        {   "node" : "Replace Nulls",
            "category": "Data Cleaning",
            "info": {
                "title": "Replace null values"
            },
            "params": [
                {"param_label": "description", "param_type": "string", "show": true},
                {"param_label": "value", "param_type": "string", "show": true}
            ],
            "inputs": [
                { 	"port_label": "in", "port_type": "DataFrame" }
            ],
            "outputs": [
                {	"port_label": "out", "port_type": "DataFrame" }
            ],
            "dependencies": {
                "data_cleaning" : {
                    "origin": "custom",
                    "value": "ReplaceNull"
                }
            },
            "origin": {
                "custom": "ReplaceNull"
            }
        },
        {   "node" : "OHCEncoder train",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Trains One Hot Categorical Encoder and transforms data"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "in", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "encoder", "port_type" : "Encoder" }
            ],
            "dependencies" : {
                "feature_engineering" : {
                    "origin": "custom",
                    "value": "OneHotEncoderTrainer"
                }
            },
            "origin" : {
                "custom" : "OneHotEncoderTrainer"
            }
        },
        {   "node" : "CatBoostEncoder train",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Trains a Categorical Boosting Encoder and transforms data"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "in", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "encoder", "port_type" : "Encoder" }
            ],
            "dependencies" : {
                "feature_engineering" : {
                    "origin": "custom",
                    "value": "CatBoostEncoderTrainer"
                }
            },
            "origin" : {
                "custom" : "CatBoostEncoderTrainer"
            }
        },
        {   "node" : "Robust Scaler train",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Trains Robust Scaler and transforms data"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "in", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "scaler", "port_type" : "Scaler" }
            ],
            "dependencies" : {
                "feature_engineering" : {
                    "origin": "custom",
                    "value": "RobustScalerTrainer"
                }
            },
            "origin" : {
                "custom" : "RobustScalerTrainer"
            }
        },
        {   "node" : "MaxAbs Scaler train",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Trains MaxAbs Scaler and transforms data"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "in", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "scaler", "port_type" : "Scaler" }
            ],
            "dependencies" : {
                "feature_engineering" : {
                    "origin": "custom",
                    "value": "MaxAbsScalerTrainer"
                }
            },
            "origin" : {
                "custom" : "MaxAbsScalerTrainer"
            }
        },
        {   "node" : "Standard Scaler train",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Trains Standard Scaler and transforms data"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "in", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "scaler", "port_type" : "Scaler" }
            ],
            "dependencies" : {
                "feature_engineering" : {
                    "origin": "custom",
                    "value": "StandardScalerTrainer"
                }
            },
            "origin" : {
                "custom" : "StandardScalerTrainer"
            }
        },
        {   "node" : "MinMax Scaler train",
            "category" : "Feature Engineering",
            "info" : {
                "title" : "Trains MinMax Scaler and transforms data"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "columns", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "in", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "data", "port_type" : "DataFrame" },
                { "port_label" : "scaler", "port_type" : "Scaler" }
            ],
            "dependencies" : {
                "feature_engineering" : {
                    "origin": "custom",
                    "value": "MinMaxScalerTrainer"
                }
            },
            "origin" : {
                "custom" : "MinMaxScalerTrainer"
            }
        },
        {   "node" : "Linear Regressor train",
            "category" : "Model Training",
            "info" : {
                "title" : "Trains Linear Regression"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "model_parameters", "param_type" : "string", "show" : false},
                { "port_label" : "optimizer", "port_type" : "Optimizer" }
            ],
            "inputs" : [
                { "port_label" : "features", "port_type" : "DataFrame" },
                { "port_label" : "truth", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "model", "port_type" : "Model" }
            ],
            "dependencies" : {
                "model_training" : {
                    "origin": "custom",
                    "value": "LinearRegressorTrainer"
                }
            },
            "origin" : {
                "custom" : "LinearRegressorTrainer"
            }
        },
        {   "node" : "SVM train",
            "category" : "Model Training",
            "info" : {
                "title" : "Trains Support Vector Machine"
            },
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "model_parameters", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "features", "port_type" : "DataFrame" },
                { "port_label" : "truth", "port_type" : "DataFrame" },
                { "port_label" : "optimizer", "port_type" : "Optimizer" }
            ],
            "outputs" : [
                { "port_label" : "model", "port_type" : "Model" }
            ],
            "dependencies" : {
                "model_training" : {
                    "origin": "custom",
                    "value": "SVMTrainer"
                }
            },
            "origin" : {
                "custom" : "SVMTrainer"
            }
        },
        {   "node" : "CreateAdams Optimizer",
            "info" : {
                "title" : "Creates Adam optimizer"
            },  
            "category" : "Model Training",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "optimizer_parameters", "param_type" : "string", "show" : false}
            ],
            "inputs" : [],
            "outputs" : [
                { "port_label" : "optimizer", "port_type" : "Optimizer" }
            ],
            "dependencies" : {
                "model_training" : {
                    "origin": "custom",
                    "value": "CreateAdamsOptimizer"
                }
            },
            "origin" : {
                "custom" : "CreateAdamsOptimizer"
            }
        },
        {   "node" : "CreateRMS Optimizer",
            "info" : {
                "title" : "Creates RMS optimizer"
            },
            "category" : "Model Training",  
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "optimizer_parameters", "param_type" : "string", "show" : false}
            ],
            "inputs" : [],
            "outputs" : [
                { "port_label" : "optimizer", "port_type" : "Optimizer" }
            ],
            "dependencies" : {
                "model_training" : {
                    "origin": "custom",
                    "value": "CreateRMSOptimizer"
                }
            },
            "origin" : {
                "custom" : "CreateRMSOptimizer"
            }
        },
        {   "node" : "Evaluate accuaracy",
            "info" : {
                "title" : "Evaluates accuracy"
            },
            "category" : "Model Evaluation",
            "params" : [
                {"param_label" : "description", "param_type" : "string", "show" : true},
                {"param_label" : "parameters", "param_type" : "string", "show" : false}
            ],
            "inputs" : [
                { "port_label" : "model", "port_type" : "Model" },
                { "port_label" : "features", "port_type" : "DataFrame" },
                { "port_label" : "truth", "port_type" : "DataFrame" }
            ],
            "outputs" : [
                { "port_label" : "accuracy", "port_type" : "Result" }
            ],
            "dependencies" : {
                "model_evaluation" : {
                    "origin": "custom",
                    "value": "EvaluateAccuracy"
                }
            },
            "origin" : {
                "custom" : "EvaluateAccuracy"
            }
        }
    ]
}